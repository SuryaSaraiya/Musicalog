{"version":3,"sources":["./src/app/components/album-list/album-list.component.ts","./src/app/components/album-list/album-list.component.html","./src/environments/environment.ts","./src/app/shared/services/app.album.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/enums/AlbumType.ts","./src/app/components/album-details/album-details.component.ts","./src/app/components/album-details/album-details.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport AlbumModel from '../../shared/models/AlbumModel';\r\nimport AlbumService from '../../shared/services/app.album.service';\r\n\r\n@Component({\r\n  selector: 'album-list',\r\n  templateUrl: './album-list.component.html',\r\n  styleUrls: ['./album-list.component.scss']\r\n})\r\nexport class AlbumList implements OnInit {\r\n  title = 'Musicalog - Album List';\r\n  albums: Array<AlbumModel>;\r\n\r\n  constructor(private albumService: AlbumService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.albumService.getAll().subscribe(data => {\r\n      this.albums = data;\r\n    });\r\n  }\r\n}\r\n","<div>\n\n  <h1>All Albums</h1>\n\n  <section id=\"album-list\" *ngIf=\"albums else loading\">\n    <div *ngFor=\"let album of albums\">\n      <div>\n        {{album.Name}}, {{album.Inventory.Stock}}, {{album.Type}}, {{album.Artists[0].Name}}\n        <a mat-raised-button href=\"/Album/Detail/{{album.Id}}\">Edit</a>\n      </div>\n    </div>\n    <!--<table mat-table [dataSource]=\"albums\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Album </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"tableColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: tableColumns;\"></tr>\n    </table>-->\n  </section>  \n  <ng-template #loading>\n    <mat-spinner></mat-spinner>\n  </ng-template>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport AlbumModel from '../models/AlbumModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport default class AlbumService {\r\n  public BASE = 'https://localhost:44374/api/album';\r\n  public ALBUM_LIST_ENDPOINT = `${this.BASE}/list`;\r\n  public ALBUM_BY_ID_ENDPOINT = `${this.BASE}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Array<AlbumModel>> {\r\n    return this.http.get<Array<AlbumModel>>(this.ALBUM_LIST_ENDPOINT);\r\n  }\r\n\r\n  getById(id: number): Observable<AlbumModel> {\r\n    return this.http.get<AlbumModel>(`${this.ALBUM_BY_ID_ENDPOINT}/${id}`);\r\n  }\r\n\r\n  updateAlbum(album: AlbumModel): Observable<AlbumModel> {\r\n    return this.http.post<AlbumModel>(`${this.ALBUM_BY_ID_ENDPOINT}/${album.Id}`, album);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ViewChild, ComponentFactoryResolver, ViewContainerRef, ElementRef } from '@angular/core';\r\nimport { AlbumDetail } from './components/album-details/album-details.component';\r\nimport { AlbumList } from './components/album-list/album-list.component';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class App implements AfterViewInit {\r\n\r\n  view: string = '';\r\n  @ViewChild('dynamicComponent', { read: ViewContainerRef }) dynamicComponent: ViewContainerRef;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n    private elementRef: ElementRef) {\r\n    this.view = this.elementRef.nativeElement.getAttribute('view');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    switch (this.view) {\r\n      case 'list':\r\n        this.loadAlbumListComponent();\r\n        break;\r\n      case 'detail':\r\n        this.loadAlbumDetailComponent();\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  private loadAlbumListComponent() {\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(AlbumList);\r\n    this.dynamicComponent.clear();\r\n    this.dynamicComponent.createComponent(componentFactory);\r\n  }\r\n\r\n\r\n  private loadAlbumDetailComponent() {\r\n    const albumId: number = this.elementRef.nativeElement.getAttribute('view-data-album-id');\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(AlbumDetail);\r\n    this.dynamicComponent.clear();\r\n    const component = <AlbumDetail>this.dynamicComponent.createComponent(componentFactory).instance;\r\n    component.albumId = albumId;\r\n  }\r\n}\r\n","<!--<album-list></album-list>-->\r\n<ng-template #dynamicComponent></ng-template>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlbumList } from './components/album-list/album-list.component';\r\nimport AlbumService from './shared/services/app.album.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AlbumDetail } from './components/album-details/album-details.component';\r\nimport { App } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AlbumList,\r\n    AlbumDetail,\r\n    App\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    //MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [AlbumService],\r\n  bootstrap: [App]\r\n})\r\nexport class AppModule { }\r\n","export enum AlbumType {\r\n  Vinyl,\r\n  CD\r\n}\r\n","import { Component, Input, OnInit, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { AlbumType } from '../../shared/enums/AlbumType';\r\nimport AlbumModel from '../../shared/models/AlbumModel';\r\nimport AlbumService from '../../shared/services/app.album.service';\r\n\r\nenum Mode {\r\n  View,\r\n  Edit\r\n}\r\n\r\n@Component({\r\n  selector: 'album-detail',\r\n  templateUrl: './album-details.component.html',\r\n  styleUrls: ['./album-details.component.scss']\r\n})\r\nexport class AlbumDetail implements OnInit {\r\n\r\n  @Input(\"mode\") mode: Mode = Mode.View;\r\n  @Input(\"albumId\") albumId: number;\r\n\r\n  title = 'Musicalog - Album Detail';\r\n  album: AlbumModel;\r\n  albumForm: any;\r\n  albumTypes = AlbumType;\r\n  albumTypeKeys: string[] = Object.keys(AlbumType).filter(k => !isNaN(Number(k)));\r\n\r\n  constructor(private albumService: AlbumService,\r\n    private elementRef: ElementRef,\r\n    private formBuilder: FormBuilder) {\r\n    console.log(this.albumTypeKeys);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('album detail ng on init');\r\n    this.albumService.getById(this.albumId).subscribe(data => {\r\n      this.album = data;\r\n    });\r\n  }\r\n\r\n  editing(): boolean {\r\n    return this.mode == Mode.Edit ? true : false;\r\n  }\r\n\r\n  editAlbum() {\r\n    this.mode = Mode.Edit;\r\n    this.albumForm = this.formBuilder.group({\r\n      Name: this.album.Name,\r\n      Type: this.album.Type,\r\n      Artist: this.album.Artists[0].Name,\r\n      Stock: this.album.Inventory.Stock\r\n    });\r\n  }\r\n\r\n  onSaveAlbum(albumData: any) {\r\n    console.log(albumData);\r\n    this.album.Name = albumData.Name;\r\n    this.album.Type = albumData.Type;\r\n    this.album.Artists[0].Name = albumData.Artist;\r\n    this.album.Inventory.Stock = albumData.Stock;\r\n\r\n    this.albumService.updateAlbum(this.album).subscribe(data => {\r\n      console.log(data);\r\n      this.mode = Mode.View;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"album else loading\">\n\n  <h1>{{album.Name}} <button mat-raised-button *ngIf=\"!editing()\" (click)=\"editAlbum()\">Edit</button></h1>\n  <section id=\"album-detail-view\" *ngIf=\"!editing()\">\n    <div>{{album.Name}}</div>\n    <div>{{album.Inventory.Stock}}</div>\n    <div>{{album.Type}}</div>\n    <div>{{album.Artists[0].Name}}</div>\n\n  </section>\n\n  <section id=\"album-detail-edit\" *ngIf=\"editing()\">\n    <form class=\"example-form\" [formGroup]=\"albumForm\" (ngSubmit)=\"onSaveAlbum(albumForm.value)\">\n      <mat-form-field>\n        <mat-label>Album</mat-label>\n        <input matInput placeholder=\"album name\" formControlName=\"Name\" name=\"albumName\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Type</mat-label>        \n        <mat-select formControlName=\"Type\">          \n          <mat-option [value]=\"albumTypes[key]\" *ngFor=\"let key of albumTypeKeys\" >{{ albumTypes[key] }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Artist</mat-label>\n        <input matInput placeholder=\"artist\" formControlName=\"Artist\" name=\"artist\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Stock</mat-label>\n        <input matInput placeholder=\"stock\" formControlName=\"Stock\" name=\"stock\">\n      </mat-form-field>\n\n      <button mat-raised-button type=\"submit\">Save</button>\n\n    </form>\n  </section>\n</div>\n\n<ng-template #loading>\n  <mat-spinner></mat-spinner>\n</ng-template>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}